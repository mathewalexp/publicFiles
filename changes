$(document).ready(function () {
    // Initialize the dialog
    $("#progressDialog").dialog({
        autoOpen: false,
        modal: true,
        resizable: false,
        closeOnEscape: false,
        draggable: false,
        open: function () {
            $(".ui-dialog-titlebar-close").hide(); // Hide the close button
        }
    });

    $("#uploadButton").click(async function () {
        const files = $("#fileInput")[0].files;
        const totalFiles = files.length;

        if (totalFiles === 0) {
            alert("No files selected!");
            return;
        }

        // Open the progress dialog
        $("#progressDialog").dialog("open");
        $("#progressBar").val(0);
        $("#progressText").text("0%");
        $("#status").text("");

        for (let i = 0; i < totalFiles; i++) {
            try {
                await uploadFile(files[i], i + 1, totalFiles); // Upload files sequentially
                $("#status").append(`<p>File ${i + 1} uploaded successfully.</p>`);
            } catch (error) {
                $("#status").append(`<p>Error uploading file ${i + 1}: ${error.message}</p>`);
            }
        }

        // Close the dialog after all uploads
        $("#progressDialog").dialog("close");
        alert("All uploads completed!");
    });

    function uploadFile(file, index, totalFiles) {
        return new Promise((resolve, reject) => {
            const formData = new FormData();
            formData.append("file", file);

            $.ajax({
                url: "/upload", // Replace with your server endpoint
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                xhr: function () {
                    const xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", function (event) {
                        if (event.lengthComputable) {
                            const fileProgress = (event.loaded / event.total) * 100;
                            const overallProgress = ((index - 1) / totalFiles) * 100 + (fileProgress / totalFiles);
                            $("#progressBar").val(overallProgress); // Update progress bar
                            $("#progressText").text(`${Math.round(overallProgress)}%`); // Update text
                        }
                    });
                    return xhr;
                },
                success: function () {
                    resolve(); // Resolve on success
                },
                error: function (xhr, status, error) {
                    reject(new Error(`File ${file.name} failed to upload: ${error}`));
                }
            });
        });
    }
});
